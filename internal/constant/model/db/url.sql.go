// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: url.sql

package db

import (
	"context"
)

const createURL = `-- name: CreateURL :one
INSERT INTO urls (original_url, short_code) 
VALUES ($1, $2)
RETURNING id, original_url, short_code, count, created_at, deleted_at, updated_at
`

type CreateURLParams struct {
	OriginalUrl string
	ShortCode   string
}

func (q *Queries) CreateURL(ctx context.Context, arg CreateURLParams) (Url, error) {
	row := q.db.QueryRow(ctx, createURL, arg.OriginalUrl, arg.ShortCode)
	var i Url
	err := row.Scan(
		&i.ID,
		&i.OriginalUrl,
		&i.ShortCode,
		&i.Count,
		&i.CreatedAt,
		&i.DeletedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getURLByShortCode = `-- name: GetURLByShortCode :one
SELECT id, original_url, short_code, count, created_at, deleted_at, updated_at FROM urls 
WHERE short_code = $1
`

func (q *Queries) GetURLByShortCode(ctx context.Context, shortCode string) (Url, error) {
	row := q.db.QueryRow(ctx, getURLByShortCode, shortCode)
	var i Url
	err := row.Scan(
		&i.ID,
		&i.OriginalUrl,
		&i.ShortCode,
		&i.Count,
		&i.CreatedAt,
		&i.DeletedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateCount = `-- name: UpdateCount :one
UPDATE urls
SET count = count + 1
WHERE short_code = $1
RETURNING id, original_url, short_code, count, created_at, deleted_at, updated_at
`

func (q *Queries) UpdateCount(ctx context.Context, shortCode string) (Url, error) {
	row := q.db.QueryRow(ctx, updateCount, shortCode)
	var i Url
	err := row.Scan(
		&i.ID,
		&i.OriginalUrl,
		&i.ShortCode,
		&i.Count,
		&i.CreatedAt,
		&i.DeletedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateURL = `-- name: UpdateURL :one
UPDATE urls
SET original_url = $1 and updated_at = NOW()
WHERE short_code = $2
RETURNING id, original_url, short_code, count, created_at, deleted_at, updated_at
`

type UpdateURLParams struct {
	OriginalUrl string
	ShortCode   string
}

func (q *Queries) UpdateURL(ctx context.Context, arg UpdateURLParams) (Url, error) {
	row := q.db.QueryRow(ctx, updateURL, arg.OriginalUrl, arg.ShortCode)
	var i Url
	err := row.Scan(
		&i.ID,
		&i.OriginalUrl,
		&i.ShortCode,
		&i.Count,
		&i.CreatedAt,
		&i.DeletedAt,
		&i.UpdatedAt,
	)
	return i, err
}
